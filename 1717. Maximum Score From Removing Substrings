class Solution {
public:

    pair<string, int> removeSubstring(const string& s, const string& target,int points){
        vector<char> stack;
        int score=0;
        for(char c: s){
            if(!stack.empty() &&
            ((target=="ab" && stack.back()=='a' && c=='b') || 
            (target=="ba" && stack.back()=='b' && c=='a'))){
                stack.pop_back();
                score+=points;
            }else{
                stack.push_back(c);
            }
        }
        string result(stack.begin(),stack.end());
        return {result,score};
    }
    int maximumGain(string s, int x, int y) {
        int totalScore=0;
        if(x>=y){
            pair<string,int> result1 =removeSubstring(s,"ab",x);
            totalScore+=result1.second;
            totalScore+=removeSubstring(result1.first,"ba",y).second;
        }else{
            pair<string,int> result1 =removeSubstring(s,"ba",y);
            totalScore+=result1.second;
            totalScore+=removeSubstring(result1.first,"ab",x).second;
        }
        return totalScore;
    }

    
};
