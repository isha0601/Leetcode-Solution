/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void preOrder(TreeNode* root,vector<int> &v){
        if(root==NULL)return ;
         preOrder(root->left,v);
         v.push_back(root->val);
         preOrder(root->right,v);
    }
    int getMinimumDifference(TreeNode* root) {
     vector<int> vec;
        preOrder(root,vec);
        int min1=INT_MAX;
        for(int i=1;i<vec.size();i++){
            min1=min(min1,vec[i]-vec[i-1]);
        }
        return min1;   
    }
};
