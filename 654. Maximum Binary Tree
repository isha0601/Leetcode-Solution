/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        if(nums.size()==0)return NULL;
        auto maxnum = max_element(nums.begin(), nums.end());
        TreeNode* root=new TreeNode(*maxnum);
        vector<int> leftTree(nums.begin(),maxnum);
        vector<int> rightTree(++maxnum,nums.end());
        root->left=constructMaximumBinaryTree(leftTree); 
        root->right=constructMaximumBinaryTree(rightTree);

        return root;
    }
};
