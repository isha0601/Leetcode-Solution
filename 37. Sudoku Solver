class Solution {
public:
    void printSudoko(vector<vector<char>>& board){
    for(int i=0;i<9;i++){
        for(int j=0;j<9;j++){
        cout<<board[i][j]<<" ";
        }
        cout<<endl;
    }
}
bool isSafe(vector<vector<char>>& board,int row,int col,int digit){

    for(int i=0;i<9;i++){
        if(board[row][i]==digit || board[i][col]==digit){
        return false;
        }
    }

    int startRow=(row/3)*3;
    int startCol=(col/3)*3;
    for(int i=startRow;i<startRow+3;i++){
        for(int j=startCol;j<startCol+3;j++){
        if(board[i][j]==digit){
            return false;
        }
        }
    }
    return true;
}

bool sudokoSolver(vector<vector<char>>& board,int row,int col){

    if(row==9){
        printSudoko(board);
        return true;
    }
    
    int nextRow=row;
    int nextCol=col+1;
    if(col+1==9){
        nextRow=row+1;
        nextCol=0;
    }
    if(board[row][col]!='.'){
    return sudokoSolver(board,nextRow,nextCol);
    }

    for(char digit='1';digit<='9';digit++){
        if(isSafe(board,row,col,digit)){
        board[row][col]=digit;
        if(sudokoSolver(board,nextRow,nextCol)) {
        return true;
        }
        board[row][col]='.';
        }
    }
    return false;
}

    void solveSudoku(vector<vector<char>>& board) {
        sudokoSolver(board,0,0);
    }
};
