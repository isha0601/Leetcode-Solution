class Solution {
public:
    bool isNice(string s, int start,int end){
        unordered_set<char> set;
        for(int i=start;i<=end;i++){
            set.insert(s[i]);
        }
        for(char c:set){
            if(isupper(c)){
                if(set.find(tolower(c))==set.end())return false;
            }else{
                if(set.find(toupper(c))==set.end())return false;
            }
        }
        return true;
    }
    string longestNiceSubstring(string s) {
        int n=s.length();
        int maxLen=0;
        string answer="";
        for(int i=0;i<n;i++){
            for(int j=i;j<n;j++){
                if(isNice(s,i,j)){
                    if(j-i+1>maxLen){
                        maxLen=j-i+1;
                        answer=s.substr(i,maxLen);
                }
            }
        }
        }
        return answer;
    }
};
