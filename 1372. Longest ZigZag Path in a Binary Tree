/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLength=0;
    void dfs(TreeNode* node, bool goLeft, int length) {
        if (!node) return;
        maxLength = max(maxLength, length);

        if (goLeft) {
            dfs(node->left, false, length + 1); // go left next
            dfs(node->right, true, 1);          // restart from right
        } else {
            dfs(node->right, true, length + 1); // go right next
            dfs(node->left, false, 1);          // restart from left
        }
    }
    int longestZigZag(TreeNode* root) {
        dfs(root->left,false,1);  //start goint left
        dfs(root->right,true,1); //start going right
        return maxLength;
    }
};
