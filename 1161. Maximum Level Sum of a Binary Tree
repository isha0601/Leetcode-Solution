/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if(root==NULL)return 0;
        queue<TreeNode*> q;
        q.push(root);
        long long maxSum=LLONG_MIN;
        int maxLevel=0;
        int level=1;
        while(!q.empty()){
            int size=q.size();
            long long currSum=0;
            for(int i=0;i<size;i++){
                TreeNode* node=q.front();
                q.pop();
                currSum+=node->val;
                if(node->left)q.push(node->left);
                if(node->right)q.push(node->right);
            }
            if(currSum>maxSum){
                maxSum=currSum;
                maxLevel=level;
            }
            level++;

        }
        return maxLevel;
    }
};
