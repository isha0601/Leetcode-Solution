class Solution {
public:
    vector<vector<int>> result;
    void backtrack(int k,int n,int start,vector<int>& curr){
        if(curr.size()==k && n==0){  //base case
            result.push_back(curr);
            return;
        }
        if(n<0 || curr.size()>k)return ;

        for(int i=start;i<=9;i++){
            curr.push_back(i);
            backtrack(k,n-i,i+1,curr);
            curr.pop_back();
        }


    }
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int>current;
        backtrack(k,n,1,current);


        return result;
    }
};
